#ifndef DB_COMPONENT_H
#define DB_COMPONENT_H

////////////////////////////////////////////////////////////////////////////////
//
// Includes
//
#ifndef FM_CORE_H
#	include "fm_core.h"
#endif

// Qt includes
#include <QSqlQuery>
#include <QSqlError>
#include <QDesktopServices>
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
namespace fm {
////////////////////////////////////////////////////////////////////////////////
namespace db {
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
// DB Macros
//

// If execution fails throws an exception with error message
#define EXECUTE_QUERY(_query_, _cmd_)             \
	if(!_query_.exec(_cmd_))                      \
		throw CException(qtr("DB Query Failed: ") \
                              .append(_query_.lastError().databaseText()));

////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
//
// interface IDBComponent
//
class IDBComponent
{
public:// Constructors
	inline IDBComponent() = default;
	virtual ~IDBComponent() = default;

public:// Interface Methodes
	virtual void Initialize() = 0;

protected:// Helper Methodes

};
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
} // namespace db
////////////////////////////////////////////////////////////////////////////////
} // namespace fm
////////////////////////////////////////////////////////////////////////////////

#endif // DB_COMPONENT_H