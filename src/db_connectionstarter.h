#ifndef DB_CONNECTION_STARTER_H
#define DB_CONNECTION_STARTER_H

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	Includes
//
#ifndef FM_CORE_H
#	include "fm_core.h"
#endif

//	Qt includes
#include <QDir>
#include <QSqlError>
#include <QSqlQuery>
#include <QSqlDataBase>

// STD Includes

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace fm { 
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace db { 
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	class CDBConnectionStarter
//
class CDBConnectionStarter
{
public:// Constructors
	inline CDBConnectionStarter(QString strDBFilePath = "");
	inline ~CDBConnectionStarter() = default;

public:// Interface Methodes
	void StartConnection(QString strDBFilePath = "");
	inline QSqlDatabase& GetDataBase();

	inline QString const& GetDBFilePath() const;

protected:// Helper Methodes
	inline void SetDataFilePath(QString const& strFilePath);

private:// Members
	static const QString m_cstrDataFilePath;
	static const QString m_cstrDataFileName;

	QString m_strDBFilePath;

	QSqlDatabase m_sqlDataBase;

	bool m_bStartConnection;
};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////// Implementing inline methods //////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
//	class CConnectionStarter
//

// Constructors
inline CDBConnectionStarter::CDBConnectionStarter(QString strFilePath)
	: m_strDBFilePath(strFilePath),
	  m_bStartConnection(false)
{
	if (m_strDBFilePath == "")
		m_strDBFilePath = m_cstrDataFilePath + m_cstrDataFileName;
}

// Interface Methodes
inline void CDBConnectionStarter::SetDataFilePath(QString const& strFilePath)
{

}

QSqlDatabase& CDBConnectionStarter::GetDataBase()
{
	return m_sqlDataBase;
}

inline QString const& CDBConnectionStarter::GetDBFilePath() const
{
	return m_strDBFilePath;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} // namespace db
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} // namespace fm
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // FM_DB_CONNECTION_STARTER_H
