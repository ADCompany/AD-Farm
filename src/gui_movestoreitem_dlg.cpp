////////////////////////////////////////////////////////////////////////////////
//
//	Includes
//
#include "gui_movestoreitem_dlg.h"

// Qt Includes
#include <QMessageBox>
#include <QIntValidator>
#include <QSplitter>
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
namespace fm {
////////////////////////////////////////////////////////////////////////////////
namespace gui {
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
//
// class CMoveStoreItemDlg
//
// Constructors
CMoveStoreItemDlg::CMoveStoreItemDlg( QStringList const& lstStorageNames,
									  QWidget *pwParent )
	: QDialog( pwParent )
{
	ui.setupUi( this );

	// Setup Store Explorer widget
	m_pwStoreExplorer = new CMovingItemSelector( lstStorageNames );
	ui.vlayStoreExplorer->addWidget( m_pwStoreExplorer );

	// Setup target store selector
	ui.wdgTargetStores->addItems( lstStorageNames );

	// Connections
	FM_CONNECT( m_pwStoreExplorer, sigNewSelection(QString const&, QString const&, int),
				this,               OnNewSelection(QString const&, QString const&, int) );	
}

// OnNewSelection [SLOT]
void CMoveStoreItemDlg::OnNewSelection( QString const& sStoreName,
										QString const& sItemName,
										int nCount )
{
	QListWidgetItem* pTargetStore = ui.wdgTargetStores->currentItem();
	bool b = pTargetStore->isSelected();
	int i = 9;
}


////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////
} // namespace gui
////////////////////////////////////////////////////////////////////////////////
} // namespace fm
////////////////////////////////////////////////////////////////////////////////
